plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id "com.diffplug.spotless" version "6.14.0"
}

group = 'com.necleo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.commons:commons-io:1.3.2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.2'
	// https://mvnrepository.com/artifact/org.yaml/snakeyaml
	implementation 'org.yaml:snakeyaml:2.0'
	// https://mvnrepository.com/artifact/io.awspring.cloud/spring-cloud-starter-aws
	implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'
	// https://mvnrepository.com/artifact/io.awspring.cloud/spring-cloud-aws-messaging
	implementation 'io.awspring.cloud:spring-cloud-aws-messaging:2.4.4'
	// https://mvnrepository.com/artifact/io.awspring.cloud/spring-cloud-aws-autoconfigure
	implementation 'io.awspring.cloud:spring-cloud-aws-autoconfigure:2.4.4'
	// https://mvnrepository.com/artifact/com.amazonaws/amazon-sqs-java-messaging-lib
	implementation 'org.springframework:spring-messaging:5.3.24'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
	// https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk
	implementation 'com.amazonaws:aws-java-sdk:1.12.414'




}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '*.md', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		// don't need to set target, it is inferred from java
		importOrder()
		removeUnusedImports()
		// apply a specific flavor of google-java-format
		googleJavaFormat()
		// fix formatting of type annotations
		formatAnnotations()
	}
}
